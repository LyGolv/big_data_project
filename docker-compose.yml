version: '3'
services:
  youtube_api:
    image: ovozen-youtube_api
    container_name: youtube_api_ovozen
    build: ./youtube_api
    ports:
      - "8000:8000"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_ovozen
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_ovozen
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  spark:
    image: bitnami/spark:latest
    container_name: spark_ovozen
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    command: /app/spark_program.py

  hadoop_namenode:
    image: apache/hadoop:3
    container_name: hadoop_namenode_ovozen
    hostname: namenode
    command: [ "hdfs", "namenode" ]
    ports:
      - "9870:9870"
    env_file:
      - ./config
    environment:
      ENSURE_NAMENODE_DIR: "/tmp/hadoop-root/dfs/name"

  hadoop_datanode:
      image: apache/hadoop:3
      container_name: hadoop_datanode_ovozen
      command: [ "hdfs", "datanode" ]
      env_file:
        - ./config
      depends_on:
        - hadoop_namenode

  hadoop_resourcemanager:
      image: apache/hadoop:3
      container_name: hadoop_resourcemanager_ovozen
      hostname: resourcemanager
      command: [ "yarn", "resourcemanager" ]
      ports:
        - "8088:8088"
      env_file:
        - ./config
      volumes:
        - ./test.sh:/opt/test.sh
      depends_on:
        - hadoop_namenode

  hadoop_nodemanager:
      image: apache/hadoop:3
      container_name: hadoop_nodemanager_ovozen
      command: [ "yarn", "nodemanager" ]
      env_file:
        - ./config
      depends_on:
        - hadoop_namenode
        - hadoop_resourcemanager

  plotly_dash:
    image: ovozen-dashboard
    container_name: plotydash_ovozen
    build: ./dashboard
    ports:
      - "8050:8050"