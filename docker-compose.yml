version: '3.8'
services:
  youtube_api:
    image: ovozen-youtube_api
    container_name: youtube_api_ovozen
    build: ./youtube_api
    ports:
      - "8000:8000"
    secrets:
      - youtube-api-key
    depends_on:
      - kafka

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka_ovozen
    container_name: kafka_ovozen
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafkaui_ovozen
    ports:
      - "9021:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_ovozen
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  spark:
    image: ovozen-spark_api
    container_name: spark_ovozen
    build: ./spark
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - '8080:8080'
      - '7077:7077'
    depends_on:
      - kafka
      - youtube_api
  spark-worker:
    image: bitnami/spark:latest
    container_name: spark_worker_ovozen
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    depends_on:
      - spark

  postgres:
    image: postgres:16-alpine
    container_name: my_postgres
    environment:
      POSTGRES_DB: youtube_video
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  my-pgadmin:
    image: dpage/pgadmin4
    ports:
      - '82:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: test1234
    restart: always

  plotly_dash:
    image: ovozen-dashboard
    container_name: plotydash_ovozen
    build: ./dashboard
    ports:
      - "8050:8050"
secrets:
  youtube-api-key:
    file: ./youtube_api/secret.txt

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:
  postgres_data: